{"version":3,"sources":["firebase.js","contexts/AuthContext.js","components/SignUp.js","components/Dashboard.js","components/Login.js","components/PrivateRoute.js","components/ForgotPassword.js","components/UpdateProfile.js","components/App.js","index.js"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","signup","email","password","createUserWithEmailAndPassword","login","signInWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","Provider","SignUp","emailRef","useRef","passwordRef","passwordConfirmRef","error","setError","history","useHistory","e","a","preventDefault","current","push","Card","Body","className","Alert","variant","Form","onSubmit","Group","id","Label","Control","type","ref","required","Button","disabled","to","Dashboard","pushState","onClick","Login","PrivateRoute","Component","component","rest","render","props","ForgotPassword","message","setMessage","UpdateProfile","promises","Promise","all","then","catch","finally","defaultValue","placeholder","App","Container","style","minHeight","maxWidth","exact","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.da24a332.chunk.js","sourcesContent":["import firebase from \"firebase/compat/app\";\r\nimport \"firebase/compat/auth\";\r\n\r\nconst app = firebase.initializeApp({\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n});\r\n\r\nexport const auth = app.auth();\r\nexport default app;","import React, { useContext, useState, useEffect } from 'react';\r\nimport { auth } from \"../firebase\";\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nexport function useAuth() {\r\n    return useContext(AuthContext)\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n    const [currentUser, setCurrentUser] = useState()\r\n    const [loading , setLoading] = useState(true)\r\n\r\n    function signup(email, password) {\r\n        return auth.createUserWithEmailAndPassword(email, password)\r\n    }\r\n\r\n    function login(email, password) {\r\n        return auth.signInWithEmailAndPassword(email, password)\r\n    }\r\n\r\n    function logout() {\r\n        return auth.signOut()\r\n    }\r\n\r\n    function resetPassword(email) {\r\n        return auth.sendPasswordResetEmail(email)\r\n    }\r\n\r\n    function updateEmail(email) {\r\n        return currentUser.updateEmail(email)\r\n    }\r\n\r\n    function updatePassword(password) {\r\n        return currentUser.updatePassword(password)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged((user) => {\r\n        setCurrentUser(user)\r\n        setLoading(false)\r\n        })\r\n\r\n        return unsubscribe\r\n    }, [])\r\n    \r\n\r\n    const value = { \r\n        currentUser,\r\n        signup,\r\n        login,\r\n        logout,\r\n        resetPassword,\r\n        updateEmail,\r\n        updatePassword\r\n    }\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {!loading && children}             \r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n","import React, { useRef, useState } from 'react'\r\nimport { Form, Button, Card, Alert } from 'react-bootstrap'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { Link, useHistory } from 'react-router-dom'\r\n\r\n\r\nexport default function SignUp() {\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const passwordConfirmRef = useRef()\r\n\r\n    const { signup } = useAuth()\r\n\r\n    const [ error, setError ] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    \r\n    const history = useHistory()\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n            return setError('password do not match')\r\n        }\r\n\r\n        try {\r\n            setError(\"\")\r\n            setLoading(true)\r\n            await signup(emailRef.current.value, passwordRef.current.value)\r\n            history.push(\"/\")\r\n        }\r\n        catch {\r\n            setError('Failed to create an account')\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center mb-4\">Sign up</h2>\r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group id=\"email\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"email\" ref={emailRef} required />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group id=\"password\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" ref={passwordRef} required />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group id=\"password-confirm\">\r\n                            <Form.Label>Password Confirmation</Form.Label>\r\n                            <Form.Control type=\"password\" ref={passwordConfirmRef} required />\r\n                        </Form.Group>\r\n\r\n                        <Button disabled={loading} className=\"w-100 mt-2\" type=\"submit\">Sign Up</Button>\r\n                    </Form>\r\n                </Card.Body>\r\n            </Card>\r\n            <div className=\"w-100 text-center mt-2\">\r\n                Already have an account?\r\n                <Link to=\"/login\">Log In</Link>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Card, Button, Alert } from 'react-bootstrap';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nexport default function Dashboard() {\r\n    const [error, setError] = useState(\"\")\r\n    const { currentUser, logout } = useAuth()\r\n    const history = useHistory();\r\n\r\n    async function handleLogout() {\r\n        setError(\"\");\r\n\r\n        try {\r\n            await logout();\r\n            history.pushState('/login');\r\n        }\r\n        catch {\r\n            setError('Failed to log out');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center mb-4\">Profile</h2>\r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                    <strong>Email: </strong>\r\n                    {currentUser.email}\r\n                    <Link to=\"/update-profile\" className=\"btn btn-primary w-100 mt-3\">\r\n                        Update Profile\r\n                    </Link>\r\n                </Card.Body>\r\n            </Card>\r\n            <div className=\"w-100 text-center mt-2\">\r\n                <Button variant=\"link\" onClick={handleLogout}>\r\n                    Log Out\r\n                </Button>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import React, { useRef, useState } from 'react'\r\nimport { Form, Button, Card, Alert } from 'react-bootstrap'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { Link, useHistory } from \"react-router-dom\"; //useHistory is a Hook\r\n\r\nexport default function Login() {\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n\r\n    const { login } = useAuth()\r\n    const [ error, setError ] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const history = useHistory()\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        try {\r\n            setError(\"\")\r\n            setLoading(true)\r\n            await login(emailRef.current.value, passwordRef.current.value)\r\n            history.push(\"/\")\r\n        }\r\n        catch {\r\n            setError('Failed to log in')\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center mb-4\">Log In</h2>\r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group id=\"email\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"email\" ref={emailRef} required />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group id=\"password\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" ref={passwordRef} required />\r\n                        </Form.Group>\r\n\r\n                        <Button disabled={loading} className=\"w-100 mt-2\" type=\"submit\">Log In</Button>\r\n                    </Form>\r\n\r\n                    <div className=\"w-100 text-center mt-3\">\r\n                        <Link to=\"/forgot-password\">Forgot Password?</Link>\r\n                    </div>\r\n                </Card.Body>\r\n            </Card>\r\n            <div className=\"w-100 text-center mt-2\">\r\n                Need an account? <Link to=\"/signup\">Sign Up</Link>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/AuthContext';\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n    const { currentUser } = useAuth()\r\n    return (\r\n        <div>\r\n        <Route\r\n            {...rest}\r\n            render={(props) => {\r\n                return currentUser ? (\r\n                    <Component {...props} />\r\n                ) : (\r\n                    <Redirect to=\"/login\" />\r\n                );\r\n            }}\r\n            >\r\n            </Route>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useRef, useState } from 'react'\r\nimport { Form, Button, Card, Alert } from 'react-bootstrap'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { Link } from \"react-router-dom\"; //useHistory is a Hook\r\n\r\nexport default function ForgotPassword() {\r\n    const emailRef = useRef();\r\n\r\n    const { resetPassword } = useAuth()\r\n\r\n    const [ error, setError ] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    \r\n    const [loading, setLoading] = useState(false)\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        try {\r\n            setMessage(\"\")\r\n            setError(\"\")\r\n            setLoading(true)\r\n            await resetPassword(emailRef.current.value)\r\n            setMessage('check your inbox for further instructions')\r\n        }\r\n        catch {\r\n            setError('Failed to reset password')\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center mb-4\">Password Reset</h2>\r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                    {message && <Alert variant=\"success\">{message}</Alert>}\r\n\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group id=\"email\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"email\" ref={emailRef} required />\r\n                        </Form.Group>\r\n\r\n                        <Button disabled={loading} className=\"w-100 mt-2\" type=\"submit\">Reset Password</Button>\r\n                    </Form>\r\n\r\n                    <div className=\"w-100 text-center mt-3\">\r\n                        <Link to=\"/login\">Log In</Link>\r\n                    </div>\r\n                </Card.Body>\r\n            </Card>\r\n            <div className=\"w-100 text-center mt-2\">\r\n                Need an account?\r\n                <Link to=\"/signup\">Sign Up</Link>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n","import React, { useRef, useState } from 'react'\r\nimport { Form, Button, Card, Alert } from 'react-bootstrap'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { Link, useHistory } from 'react-router-dom'\r\n\r\n\r\nexport default function UpdateProfile() {\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const passwordConfirmRef = useRef()\r\n    \r\n    const [ error, setError ] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const { currentUser, updatePassword, updateEmail } = useAuth()\r\n\r\n    const history = useHistory()\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n            return setError('password do not match')\r\n         }\r\n         \r\n        const promises = [];\r\n        setLoading(true)\r\n        setError(\"\")\r\n         \r\n\r\n         if (emailRef.current.value !== currentUser.email) {\r\n             promises.push(updateEmail(emailRef.current.value))\r\n         }\r\n\r\n         if (passwordRef.current.value) {\r\n             promises.push(updatePassword(passwordRef.current.value))\r\n         }\r\n\r\n        Promise.all(promises)\r\n            .then(() => {\r\n             history.push('/')\r\n            })\r\n            .catch(() => {\r\n            setError('Failed to update account')\r\n            })\r\n            .finally(() => \r\n            setLoading(false))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center mb-4\">Update Profile</h2>\r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group id=\"email\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control\r\n                                type=\"email\"\r\n                                ref={emailRef}\r\n                                required\r\n                                defaultValue={currentUser.email} />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group id=\"password\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control\r\n                                type=\"password\"\r\n                                ref={passwordRef} placeholder=\"Leave blank to keep the same\" />\r\n                        </Form.Group>\r\n\r\n                            <Form.Group id=\"password-confirm\">\r\n                            <Form.Label>Password Confirmation</Form.Label>\r\n                            <Form.Control\r\n                                type=\"password\"\r\n                                ref={passwordConfirmRef} placeholder=\"Leave blank to keep the same\" />\r\n                        </Form.Group>\r\n                        \r\n                        <Button disabled={loading} className=\"w-100 mt-2\" type=\"submit\">Update</Button>\r\n                    </Form>\r\n                </Card.Body>\r\n            </Card>\r\n            <div className=\"w-100 text-center mt-2\">\r\n                <Link to=\"/\">Cancel</Link>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from \"react\";\nimport SignUp from \"./SignUp\";\nimport { Container } from 'react-bootstrap';\nimport { AuthProvider } from \"../contexts/AuthContext\";\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Dashboard from \"./Dashboard\";\nimport Login from \"./Login\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport ForgotPassword from \"./ForgotPassword\";\nimport UpdateProfile from \"./UpdateProfile\";\n\nfunction App() {\n  return (\n    <Container\n      className=\"d-flex align-items-center justify-content-center\"\n      style={{ minHeight: \"100vh\" }}\n    >\n      <div className=\"w-100\" style={{ maxWidth: '400px' }}>\n        <Router>\n          <AuthProvider>\n            <Switch>\n              <PrivateRoute exact path=\"/\" component={Dashboard} />\n              <PrivateRoute path=\"/update-profile\" component={UpdateProfile} />\n              <Route path=\"/signup\" component={SignUp} />\n              <Route path=\"/login\" component={Login} />\n              <Route path=\"/forgot-password\" component={ForgotPassword} />\n            </Switch>\n          </AuthProvider>\n        </Router>\n      </div>\n    </Container>\n  \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"bootstrap/dist/css/bootstrap.min.css\"\n\n\nReactDOM.render(\n  <React.StrictMode>    \n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}